{"ast":null,"code":"import _classCallCheck from\"/home/akshaybhopani/GitHub Projects/RoboFriends/RoboFriends Native/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/akshaybhopani/GitHub Projects/RoboFriends/RoboFriends Native/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/akshaybhopani/GitHub Projects/RoboFriends/RoboFriends Native/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/akshaybhopani/GitHub Projects/RoboFriends/RoboFriends Native/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import CardList from'./CardList';import SearchBox from'./SearchBox';import Scroll from'./Components/Scroll';import{setSearchField}from'./actions';var mapStateToProps=function mapStateToProps(state){return{searchField:state.searchField};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSearchChange:function onSearchChange(event){return dispatch(setSearchField(event.target.value));}};};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.state={robots:[]};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){_this2.setState({robots:users});});}},{key:\"render\",value:function render(){var _this$props=this.props,searchField=_this$props.searchField,onSearchChange=_this$props.onSearchChange;var filteredRobots=this.state.robots.filter(function(robots){return robots.name.toLowerCase().includes(searchField.toLowerCase());});if(this.state.robots.length===0){return/*#__PURE__*/React.createElement(\"h1\",null,\"Loading\");}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"tc\"},/*#__PURE__*/React.createElement(\"h1\",{style:{color:\"orange\"},className:\"f2 georgia b\"},\"RoboFriends\"),/*#__PURE__*/React.createElement(\"h4\",{style:{color:\"white\"}},\" RoboFriends App helps you to find robots. You can view their profile picture, name and email in beautiful card layout. Build on React and uses RoboHash API to fetch the robots information.\"),/*#__PURE__*/React.createElement(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/React.createElement(Scroll,null,/*#__PURE__*/React.createElement(CardList,{robots:filteredRobots})));}}}]);return App;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/akshaybhopani/GitHub Projects/RoboFriends/RoboFriends Native/src/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","mapStateToProps","state","searchField","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","robots","fetch","then","response","json","users","setState","props","filteredRobots","filter","name","toLowerCase","includes","length","color"],"mappings":"otBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,cAAT,KAA+B,WAA/B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHC,WAAW,CAAED,KAAK,CAACC,WADhB,CAAP,CAGH,CAJD,CAKA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAC3B,CACI,MAAO,CACPC,cAAc,CAAE,wBAACC,KAAD,QAAWF,CAAAA,QAAQ,CAACL,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB,EADT,CAAP,CAGH,CALD,C,GAOMC,CAAAA,G,0FACF,cAAc,qCACV,wBACA,MAAKR,KAAL,CAAa,CACTS,MAAM,CAAC,EADE,CAAb,CAFU,aAKb,C,6EAEmB,iBAChBC,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,CAAG,CACb,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAHD,EAICF,IAJD,CAIM,SAAAG,KAAK,CAAI,CACX,MAAI,CAACC,QAAL,CAAc,CAAEN,MAAM,CAAEK,KAAV,CAAd,EACH,CAND,EAOH,C,uCAIQ,iBAEgC,KAAKE,KAFrC,CAEEf,WAFF,aAEEA,WAFF,CAEeG,cAFf,aAEeA,cAFf,CAGL,GAAMa,CAAAA,cAAc,CAAC,KAAKjB,KAAL,CAAWS,MAAX,CAAkBS,MAAlB,CAAyB,SAAAT,MAAM,CAAG,CACnD,MAAOA,CAAAA,MAAM,CAACU,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCpB,WAAW,CAACmB,WAAZ,EAAnC,CAAP,CACH,CAFoB,CAArB,CAGA,GAAI,KAAKpB,KAAL,CAAWS,MAAX,CAAkBa,MAAlB,GAA4B,CAAhC,CAAmC,CAC/B,mBAAO,wCAAP,CACH,CAFD,IAEO,CACP,mBACI,2BAAK,SAAS,CAAC,IAAf,eACC,0BAAI,KAAK,CAAE,CAACC,KAAK,CAAC,QAAP,CAAX,CAA6B,SAAS,CAAC,cAAvC,gBADD,cAEC,0BAAI,KAAK,CAAE,CAACA,KAAK,CAAC,OAAP,CAAX,kMAFD,cAGC,oBAAC,SAAD,EAAW,YAAY,CAAEnB,cAAzB,EAHD,cAIC,oBAAC,MAAD,mBACC,oBAAC,QAAD,EAAU,MAAM,CAAEa,cAAlB,EADD,CAJD,CADJ,CAUC,CACJ,C,iBAxCaxB,S,EA4ClB,cAAeC,CAAAA,OAAO,CAACK,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Components/Scroll';\r\nimport { setSearchField } from './actions'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchField\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>\r\n{\r\n    return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> {\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({ robots: users})\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        const {searchField, onSearchChange} =this.props;\r\n        const filteredRobots=this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n        if (this.state.robots.length ===0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n        return (\r\n            <div className='tc'>\r\n             <h1 style={{color:\"orange\"}} className='f2 georgia b' >RoboFriends</h1>\r\n             <h4 style={{color:\"white\"}}> RoboFriends App helps you to find robots. You can view their profile picture, name and email in beautiful card layout. Build on React and uses RoboHash API to fetch the robots information.</h4>\r\n             <SearchBox searchChange={onSearchChange} />\r\n             <Scroll>\r\n              <CardList robots={filteredRobots} />\r\n             </Scroll>\r\n             </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}