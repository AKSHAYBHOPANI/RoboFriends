{"ast":null,"code":"var _jsxFileName = \"/home/akshaybhopani/GitHub Projects/RoboFriends/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport Scroll from './Components/Scroll';\nimport { setSearchField } from './actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      return response.json();\n    }).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  render() {\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }\n      }, \"Loading\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: \"orange\"\n        },\n        className: \"f2 georgia b\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      }, \"RoboFriends\"), /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      }, \" RoboFriends App helps you to find robots. You can view their profile picture, name and email in beautiful card layout. Build on React and uses RoboHash API to fetch the robots information.\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(CardList, {\n        robots: filteredRobots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      })));\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/akshaybhopani/GitHub Projects/RoboFriends/src/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","mapStateToProps","state","searchField","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","robots","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","name","toLowerCase","includes","length","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAC3B;AACI,SAAO;AACPC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACL,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD5B,GAAP;AAGH,CALD;;AAOA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AACxBgB,EAAAA,WAAW,GAAG;AACV;AACA,SAAKT,KAAL,GAAa;AACTU,MAAAA,MAAM,EAAC;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAG;AACb,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHD,EAICF,IAJD,CAIMG,KAAK,IAAI;AACX,WAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEM;AAAV,OAAd;AACH,KAND;AAOH;;AAIDE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACjB,MAAAA,WAAD;AAAcG,MAAAA;AAAd,QAA+B,KAAKe,KAA1C;AACA,UAAMC,cAAc,GAAC,KAAKpB,KAAL,CAAWU,MAAX,CAAkBW,MAAlB,CAAyBX,MAAM,IAAG;AACnD,aAAOA,MAAM,CAACY,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCvB,WAAW,CAACsB,WAAZ,EAAnC,CAAP;AACH,KAFoB,CAArB;;AAGA,QAAI,KAAKvB,KAAL,CAAWU,MAAX,CAAkBe,MAAlB,KAA4B,CAAhC,EAAmC;AAC/B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH,KAFD,MAEO;AACP,0BACI;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAX;AAA6B,QAAA,SAAS,EAAC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,eAEC;AAAI,QAAA,KAAK,EAAE;AAACA,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAFD,eAGC,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEtB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,eAIC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEgB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJD,CADJ;AAUC;AACJ;;AAxCuB;;AA4C5B,eAAe1B,OAAO,CAACK,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Components/Scroll';\r\nimport { setSearchField } from './actions'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchField\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>\r\n{\r\n    return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> {\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({ robots: users})\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        const {searchField, onSearchChange} =this.props;\r\n        const filteredRobots=this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n        if (this.state.robots.length ===0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n        return (\r\n            <div className='tc'>\r\n             <h1 style={{color:\"orange\"}} className='f2 georgia b' >RoboFriends</h1>\r\n             <h4 style={{color:\"white\"}}> RoboFriends App helps you to find robots. You can view their profile picture, name and email in beautiful card layout. Build on React and uses RoboHash API to fetch the robots information.</h4>\r\n             <SearchBox searchChange={onSearchChange} />\r\n             <Scroll>\r\n              <CardList robots={filteredRobots} />\r\n             </Scroll>\r\n             </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}